<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">

  <title>Search</title>

  <link rel="preconnect" href="https://fonts.gstatic.com">
  <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@500&display=swap" rel="stylesheet">
  <link href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.2/css/all.min.css">

  <style>
    body{
      font-family: 'Montserrat', sans-serif;
      font-size:14px;
    }
  </style>
</head>
<body class="bg-gray-50">
  <div id="app" class="container mx-auto">
    <div class="h-8 flex items-center justify-center mt-10 mb-8">
      <input
        v-model="target"
        type="text"
        class="h-full px-2 py-1 w-72 rounded-l shadow-md"
        placeholder="Enter something to search"
        @keypress.enter="search"
      >
      <button
        :class="`bg-blue-${ target.length ? 500 : 300 } text-white h-full px-3 rounded-r shadow-lg`"
        @click="search()"
      >Search</button>
    </div>

    <div class="w-full flex justify-center">
      <i class="text-yellow-500 fas fa-spinner fa-spin fa-2x" v-if="loading"></i>
    </div>

    <div
      v-if="anythingHasSearched && !loading && result.length && fetchTime"
      v-text="`query time: ${ fetchTime } seconds`"
      class="text-gray-400 text-center mb-3"
    ></div>

    <div class="p-5 w-full bg-white rounded shadow-lg" v-if="!loading">
      <div class="p-3 flex flex-col items-center text-gray-500" v-if="result.length === 0 && anythingHasSearched">
        <i class="fas fa-3x fa-meh"></i>
        <h3 class="text-lg">Meh!</h3>
        <p class="mt-2">Your query did not match any documents.</p>
      </div>

      <div class="p-3 flex flex-col items-center text-gray-500" v-if="!anythingHasSearched">
        <p class="text-lg mb-2"><strong><%= pagesCount %></strong> pages of <strong><%= hostsCount %></strong> websites have indexed!</p>
        <p class="mb-1">This search engine only retrieve data from indexed pages and indexing process is not automatic.</p>
        <p class="mb-1">First, you should tell this search engine to index specific website.</p>
        <p>If your target website is not indexed, add that website <a href="/index" class="text-blue-500">from this page</a>.</p>
      </div>

      <div v-for="(item, index) of result" class="w-full">
        <div class="p-3">
          <a target="_blank" :href="item.url">
            <span class="text-gray-500" v-text="summary(item.url, 80)"></span>
            <h2 class="text-lg mb-1 text-blue-500" v-text="summary(item.meta.title, 50)"></h2>
          </a>
          <p class="text-gray-500" v-text="summary(item.meta.description, 200)"></p>
          <div class="flex justify-around mt-3">
            <div class="flex flex-col items-center">
              <span class="mb-1 text-gray-500">Terms</span>
              <strong class="text-gray-900" v-text="item.termsCount"></strong>
            </div>
            <div class="flex flex-col items-center">
              <span class="mb-1 text-gray-500">Tokens</span>
              <strong class="text-gray-900" v-text="item.tokensCount"></strong>
            </div>
            <div class="flex flex-col items-center">
              <span class="mb-1 text-gray-500">Score</span>
              <strong class="text-gray-900" v-text="item.score + '%'"></strong>
            </div>
            <div class="flex flex-col items-center">
              <span class="mb-1 text-gray-500">Length</span>
              <strong class="text-gray-900" v-text="item.length"></strong>
            </div>
            <div class="flex flex-col items-center" v-if="item.indexedAt !== undefined">
              <span class="mb-1 text-gray-500">Indexed at</span>
              <strong class="text-gray-900" v-text="timeago(item.indexedAt)"></strong>
            </div>
          </div>
        </div>
        <hr v-if="index !== result.length - 1" class="my-3" />
      </div>
    </div>

    <p class="text-center mt-14 mb-3 text-gray-500">
      An open-source project developed with <i class="fas fa-heart text-red-500"></i> by <a class="text-blue-500" href="https://akdev.ir">Amir Kabiri</a>
    </p>
    <div class="grid grid-cols-3 text-center gap-1 mb-8">
      <a class="text-blue-500" href="#">Project repository</a>
      <a class="text-blue-500" href="https://akdev.ir/">My personal website</a>
      <a class="text-blue-500" href="https://github.com/amirkabiri">My github</a>
      <a class="text-blue-500" href="https://en.wikipedia.org/wiki/Information_retrieval">Information retrieval</a>
      <a class="text-blue-500" href="https://en.wikipedia.org/wiki/Vector_space_model">Vector space model</a>
      <a class="text-blue-500" href="https://en.wikipedia.org/wiki/Tf%E2%80%93idf">TD-IDF</a>
    </div>
  </div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/timeago.js/2.0.2/timeago.min.js" integrity="sha512-sl01o/gVwybF1FNzqO4NDRDNPJDupfN0o2+tMm4K2/nr35FjGlxlvXZ6kK6faa9zhXbnfLIXioHnExuwJdlTMA==" crossorigin="anonymous"></script>
  <script src="/socket.io/socket.io.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/vue@2.6.12/dist/vue.js"></script>
  <script>
    const socket = io();

    const vue = new Vue({
      el: '#app',
      data: {
        target: '',
        result: [],
        loading: false,
        anythingHasSearched: false,
        fetchTime: Date.now()
      },
      created(){
        const url = new URL(window.location.href);
        const query = (url.searchParams.get('q') || '').trim();
        if(!query.length) return;

        this.target = query;
        this.search();
      },
      watch: {
        target(target){
          const url = new URL(window.location.href);
          url.searchParams.set('q', target);
          history.pushState({}, null, url.toString());
        }
      },
      methods: {
        timeago(time){
          console.log(time, new Date(time))
          return timeago().format(new Date(time));
        },
        summary(str, length = 100){
          if(str.length <= length) return str;
          return str.slice(0, length) + ' ...';
        },
        search(){
          const target = this.target.trim();
          if(!target.length) return;
          this.loading = true;
          this.anythingHasSearched = true;

          let time = Date.now();
          socket.emit('search', this.target, result => {
            this.result = result;
            this.loading = false;
            this.fetchTime = (Date.now() - time) / 1000;
          })
        }
      }
    })
  </script>
</body>
</html>